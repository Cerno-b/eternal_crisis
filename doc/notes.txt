====
todo
====

* larger explosion for main body and ship
* make rockets explode on timeout
* move boss around
* graphical hint that boss is invincible as long as timer does not run (e.g. forcefield)
* add spread shot for split and main block
* switch to true randomize on release
* show -20s longer


==========
todo after
==========

* Check if Godot network query can be removed at first start
* Check if Godot allows rotation around a single pixel
* Check if Godot allows aligning a collision shape to a non-centered sprite with offset generated by code
* Find a robust way to access any node from anywhere (no playing around with string)
* Review the code and write a cheat sheet (e.g. how to get viewport size, etc)
* Find a good way to handle state machines (state_begin, state, state_end events)
* Why are collision masks in code and ui offset by 1?
* Is there a way to use "is" with "in"? e.g. if obj in [Class1, Class2]
* why does viewport size go to 400 in full screen but ship moves out at the bottom anyway?

* Run a http server in the html5 dir in order to start
	-> python -m http.server
	-> open http://localhost:8000/html5.html in browser
	
	
=================
new stuff learned
=================

* 1BITDRAGON exists


=====
ideas
=====

* Play around more with appendages (objects attached to objects that move dependently)